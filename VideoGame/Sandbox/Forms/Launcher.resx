<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbLaunchBackground.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        bAAAAABJRU5ErkJggg==
</value>
  </data>
</root>